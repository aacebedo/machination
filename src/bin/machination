#!/usr/bin/env python
# PYTHON_ARGCOMPLETE_OK

##########################################################################
# Machination
# Copyright (c) 2014, Alexandre ACEBEDO, All rights reserved.
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 3.0 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library.
##########################################################################
import os
import sys
import shutil
import pwd
sys.path.append(os.path.abspath(os.path.abspath(os.path.join(os.path.dirname(os.path.realpath(__file__)),'..','share','machination','python'))))

import machination.loggers
machination.loggers.initLoggers()

from machination.cmdline import CmdLine
from machination.helpers import mkdir_p

from machination.constants import MACHINATION_USERDIR
from machination.constants import MACHINATION_USERINSTANCESDIR
from machination.constants import MACHINATION_USERTEMPLATESDIR
from machination.constants import MACHINATION_USERPROVISIONERSDIR
from machination.constants import MACHINATION_USERANSIBLEPLAYBOOKSDIR
from machination.constants import MACHINATION_USERANSIBLEROLESDIR

from machination.constants import MACHINATION_DEFAULTPROVISIONERSDIR
from machination.constants import MACHINATION_DEFAULTTEMPLATESDIR

def __main__():         
  mkdir_p(MACHINATION_USERINSTANCESDIR)
  if os.geteuid() == 0:
    #Get the real user behind the sudo
    pw_record = pwd.getpwnam(os.getenv("SUDO_USER"))
    os.chown(MACHINATION_USERDIR, pw_record.pw_uid, pw_record.pw_gid)
    for root, dirs, files in os.walk(MACHINATION_USERDIR):
      for d in dirs:
        os.lchown(os.path.join(root, d), pw_record.pw_uid, pw_record.pw_gid)
      for f in files:
        os.lchown(os.path.join(root, f), pw_record.pw_uid, pw_record.pw_gid)
                  
  cmd = CmdLine()
  cmd.parseArgs(sys.argv)

if __name__ == "__main__":
    __main__()
    
    

#!/usr/bin/env python
import os
import argparse
import yaml
import socket
import fcntl
import struct
import array
import sys
import copy
import getpass

from logging import StreamHandler
from platform import architecture
from ipaddr import IPAddress, _IPAddrBase


sys.path.append(os.path.abspath(os.path.abspath(os.path.join(os.path.dirname(os.path.realpath(__file__)),'..','share','machination','python'))))
from core import *
from enums import *
from registries import *
from cmdline import *
from constants import *
from helpers import *

def __main__():
    mkdir_p(MACHINATION_INSTANCESDIR)
    
    formatter = logging.Formatter('%(message)s')
    strHandler = StreamHandler()
    strHandler.setLevel(logging.DEBUG)
    strHandler.setFormatter(formatter)
    
    logger = logging.getLogger("test")
    logger.setLevel(logging.DEBUG)
    logger.addHandler(strHandler)
    
    logger = logging.getLogger("commandline")
    logger.setLevel(logging.DEBUG)
    logger.addHandler(strHandler)
            
    cmd = CmdLine()
    try:
        cmd.parseArgs(sys.argv)
    except MachineInstanceAlreadyExistsException as e:    
        sys.exit(e)
    except MachineInstanceDoNotExistException as e:    
        sys.exit(e)
    except:
        raise#args = parser.parse_args()
    #args.func(args)

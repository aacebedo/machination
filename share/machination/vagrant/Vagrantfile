##########################################################################
# Vagrantfile
# Copyright (c) 2014, Alexandre ACEBEDO, All rights reserved.
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 3.0 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library.
##########################################################################
require 'yaml'
cwd 		 = File.dirname(File.expand_path(__FILE__))
installPath = "/home/aacebedo/Private/workspace/machination"
machine_config    = YAML.load_file("#{cwd}/config.yml")

ENV['VAGRANT_DEFAULT_PROVIDER'] = "docker"


Vagrant.configure("2") do |config|
  config.ssh.forward_agent = true
  config.vm.network "public_network"
  config.ssh.forward_x11 = true
  config.vm.hostname = machine_config["name"]
 
  config.vm.define machine_config["name"] do |a|
   a.vm.provider "docker" do |d|
	  d.image = "aacebedo/ubuntu-trusty-vagrant-"+machine_config["arch"]
      d.name = machine_config["name"]
      d.remains_running = true
      d.create_args = ["-t","-i"]
      d.privileged = true
      d.volumes = machine_config["volumes"]
      d.cmd = ["/sbin/init"]
      d.has_ssh = true 
   end
  end

  config.vm.provision :host_shell,run: "always" do |host_shell|
    command = ""
    counter=0
    for i in machine_config["guest_interfaces"]
  		counter+=1
  		if i["hostname"]
  			command += "unshare -u -- sh -c 'sysctl kernel.hostname=" + i["hostname"] + "; pipework " + machine_config["host_interface"] + " -i eth" + counter.to_s + " " + machine_config["name"] + " " + i["ipaddr"] + " " + i["macaddr"] + "';"
		else
			command += "pipework " + machine_config["host_interface"] + " -i eth" + counter.to_s + " " + machine_config["name"] + " " + i["ipaddr"] + " " + i["macaddr"] + ";"	
		end
	end
    host_shell.inline = command
  end

  config.vm.provision :ansible do |ansible|
  	ENV['ANSIBLE_CONFIG'] = File.join(installPath,"share","machination","provisioner","ansible","ansible.cfg")
    ansible.playbook = File.join(installPath,"share","machination","provisioner","ansible","playbooks",machine_config["template"]+".playbook")
    ansible.sudo = true
  end
end 
